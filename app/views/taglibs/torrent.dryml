<def tag="card" for="Torrent">
   <div class="torrent" id="torrent_#{this.id}">
      <link-to-details />
   </div>
</def>

<def tag="details">
    <cataract-helm class="#{'error' unless this.errors.empty?}">
      <helm-content: class="torrent">
         <% div_for this do %>
            <details-for-running  if="&this.running?" />
            <details-for-paused   if="&this.paused?" />
            <details-for-archived if="&this.archived?" />
            <details-for-remote   if="&this.remote?" />
            <details-for-new      if="&this.new_record?" />
         <% end %>
      </helm-content>
      <helm-menu:>
        <buttons>
          <%= action_buttons_for this %>
        </buttons>
      </helm-menu>
      <top:>
        <span class="title"><%=h this.short_title %></span>
      </top>
  </cataract-helm>
</def>

<def tag="details-for-running">
  downloading... <%= this.progress %>% <br/>
  Rate: <%= number_to_human_rate(this.up_rate) %> up, 
        <%= number_to_human_rate(this.down_rate) %> down <br />
  Total: <%= number_to_human_size(this.up_total) %> up, 
         <%= number_to_human_size(this.down_total) %> down<br />
</def>

<def tag="details-for-archived">
  Archived
</def>

<def tag="details-for-paused">
  Paused
</def>

<def tag="details-for-new">
  <if test="&this.fetchable?">
    Click add to save <tt><%= this.url %></tt> as <em><%=h this.filename %></em> and start it.
  </if>
  <else>
    <%= error_messages_for 'torrent', :object => this %>
  </else>
</def>

<def tag="details-for-remote">
  remote: <%= this.url %>
</def>

<def tag="list-of-torrents">
 <repeat>
    <card />
 </repeat>
</def>

<def tag="link-to-details">
   <%= link_to h(this.short_title), torrent_url(this) %>
</def>

<def tag="event-log">
  <ul id="event_log">
    <li: class="&this.level.to_s"><%= h(this.message) %></li>
  </ul>
  <else>
    <ul id="event_log" />
  </else>
</def>

<def tag="main-status">
  Rate: 
    <%= number_to_human_rate(Torrent.upload_rate) %> up,
    <%= number_to_human_rate(Torrent.download_rate) %> down
</def>
