# Getting Started

In this quick-start we'll run through the creation of the "POD" classified adverts application which was featured in the early Hobo screencasts. At the time of writing those screencasts are very out-dated, but this guide brings things up to date with Hobo 0.7.1

For this guide we're going to assume that you're working with a text-editor and command-line terminal.


## Pre-requisites

The main dependency for Hobo is, of course, Ruby on Rails. Hobo needs at least Rails 2.0, but it's best to get the latest version (2.0.2 at the time of writing). Rails has a few dependencies itself of course, but rather than duplicating the instructions here, just follow the instructions on the main Rails site:

 * [rubyonrails.org: installing Rails](http://www.rubyonrails.org/down)
 
You will also need subversion in order to obtain the needed `classic_pagination` plugin (Hobo will switch to a different pagination plugin in the future):

 * [tigris.org: installing subversion](http://subversion.tigris.org/project_packages.html)
 
(Tip: Try a web search for a better guide to installing subversion on your particular platform)

Hobo also requires a database. Before Rails 2.0.2 the default was MySQL. It just changed to SQLite3. Either of those are a fine for working through this tutorial. If you're on a Mac, SQLite3 is pre-installed since 10.4

 * [mysql.com: download MySQL 5](http://dev.mysql.com/downloads/mysql/5.0.html#downloads)
 * [sqlite.org: download SQLite](http://www.sqlite.org/download.html)


## Installing Hobo

In the process of getting Rails up and running you will install RubyGems, the package-manager for Ruby. That means installing Hobo is as easy as:

    gem install hobo
    
That will give you the `hobo` command, which can be used to create a new Hobo application.


## Creating a blank application

Get yourself in a directory where you want your Hobo app to be kept, and:

    hobo pod
    
You should see the following: (lots of details removed for brevity)

    Generating Rails app...
          ...
          
    Installing classic_pagination
          ...
          
    Installing Hobo plugin...

    Initialising Hobo...
          ...

    Installing Hobo Rapid and default theme...
          ...

    Creating user model and controller...
          ...

    Creating standard pages...
          ...
          
          
A directory is created called pod, have a look at the files that have been created. This is mostly a standard Rails app, but if you are familiar with the file structure that Rails creates you will notice there are some extra things here and there. In particular you will see that Hobo has been installed in `vendor/plugins`

## Create the database

If you're using MySQL you now need to create the database:

    mysqladmin create pod_development
    
By default, the `hobo` command creates a user model. The database table for this model needs to be created. The migration generator can do this for us:

    ruby script/generate hobo_migration
    
You should see:

    ---------- Up Migration ----------
    create_table :users do |t|
      t.string   :crypted_password, :limit => 40
      t.string   :salt, :limit => 40
      t.string   :remember_token
      t.datetime :remember_token_expires_at
      t.string   :username
      t.boolean  :administrator
      t.datetime :created_at
      t.datetime :updated_at
    end
    ----------------------------------

    ---------- Down Migration --------
    drop_table :users
    ----------------------------------
    What now: [g]enerate migration, generate and [m]igrate now or [c]ancel?
    
Respond with `m` and then give something like "add users" as the filename. The migration file will be created in db/migrate, and the `users` table will be created.

    
## Start the app

From here on, all the commands have to be given in the main directory of your application.

Launch Rails' built in development server with:

    ruby script/server
    
And point your browser at `http://localhost:3000`. You should see:

<img src="images/front-page.png">


## Sign-up and Log-in

You should find that you are already able to sign up as a new user, and log in and out.

We now have a basic Hobo app up and running with the default theme. Of course the app doesn't do much at this stage. To add functionality, the first step is to create some models.
