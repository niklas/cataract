<def tag="base-page" attrs="title, doctype">
  <% title ||= default_page_title %>
  <doctype param version="&doctype || 'HTML 4.01 STRICT'"/>
  <html>
    <head param>
      <title param><%= title.gsub(/<.*?>/, '') %></title>
      <do param="stylesheets">
        <stylesheet name="reset"/>
        <stylesheet name="hobo-rapid"/>
        <stylesheet name="application"/>
      </do>

      <do param="scripts">
        <javascript param name="prototype, effects, dragdrop, controls, lowpro, hobo-rapid, application"/>
        <hobo-rapid-javascripts param/>
      </do>
    </head>

    <body onload="Hobo.applyEvents();" param/>
</html>
</def>


<def tag="simple-layout">
  <base-page merge>
    <body: param>
      <ajax-progress/>
      <header class="page-header" param>
        <heading param="app-name"><a href="/#{base_url}"><app-name/></a></heading>
        <live-search param if="&defined_route? :site_search"/>
        <nav param>
          <account-nav if="&Hobo::UserController.user_models.first" param/>
          <magic-nav class="main-nav" param="main-nav"/>
        </nav>
      </header>
      <section class="page-content" param="content">
        <flash-message param/>
        <flash-message type="error" param/>
        <header class="content-header" param="content-header"/>
        <section class="content-body" param="content-body"/>
        <footer class="content-footer" param="content-footer"/>
      </section>
      <footer class="page-footer" param/>
    </body:>
  </base-page>
</def>


<def tag="aside-layout">
  <simple-layout merge>
  <body: class="aside-layout" param/>
    <content: param>
      <section class="main-content" param="main-content">
        <param-content for="content"/>
      </section>
      <aside class="aside-content" empty param/>
    </content:>
  </simple-layout>
</def>
      

<def tag="page" attrs="layout"><call-tag tag="#{layout || 'simple'}-layout" merge/></def>


<def tag="index-page">
  <% model_name = @model.name.titleize %>
  <page title="All #{model_name.pluralize}" merge>
    <body: class="index-page #{@model.name.underscore}" param/>
    <content-header: param>
      <heading param><%= model_name.pluralize %></heading>
      <p class="note" param>There <do with="&@model"><count part="item-count" prefix="are"/></do></p>
    </content-header>

    <content-body: param>
      <nav param="top-pagination-nav"><page-nav/></nav>
      
      <collection param/>
      
      <nav param="bottom-pagination-nav"><page-nav/></nav>
    </content-body>
    
    <content-footer: param>
      <a to="&@model" action="new" param="new-link" if="&linkable?(@model, :new)"/>
      <else>
        <do with="&new_for_current_user @model">
          <section class="create-new" if="&can_create?">
            <h2>New <type-name/></h2>
            <form><field-list/><submit label="Create #{type_name}"/></form>
          </section>
        </do>
      </else>
    </content-footer>
  </page>
</def>


<def tag="new-page">
  <page title="New #{type_name}" merge>
    <body: class="new-page #{type_name.underscore}" param/>
    <content-header: param>
      <heading param>New <type-name title/></heading>
    </content-header>

    <content-body: param>
      <error-messages param/>

      <form param>
        <field-list skip-associations="has_many" param/>
        <div class="actions" param="actions">
          <submit label="Create #{type_name}" param/><do param="back-link"> or <a>Cancel</a></do>
        </div>
      </form>
    </content-body>
  </page>
</def>


<def tag="show-page">
  <set primary-collection-name="&params[:primary_collection] || self.primary_collection_name"/>
  <page merge title="#{name :no_wrapper => true}">
    <body: class="show-page #{type_name :dasherize => true}" param/>
    <content-header: param>
      <if with="&this.dependent_on.reject{|x| x.is_a?(Hobo::User)}.first">
        <div class="container"><a/></div>
      </if>

      <heading param><%= this %></heading>
      <creation-details param/>
      
      <do field="&primary_collection_name" if="&primary_collection_name" param="primary-collection-count">
        <association-count class="primary-collection-count" part="primary-collection-count"/>
      </do>
                         
      <a action="edit" class="edit" if="&can_edit?" param="edit-link">Edit <type-name/></a>
    </content-header>
    
    <content-body: param>
      <primary-content param/>

      <field-list skip="&[this.class.name_attribute, this.class.primary_content_attribute, this.class.creator_attribute, this.class.dependent_on.first].compact "
                  skip-associations="has_many" param/>

      <section class="primary-collection" field="&primary_collection_name" if="&primary_collection_name">
        <h2 param="primary-collection-title"><%= primary_collection_name.to_s.titleize %></h2>

        <do param="primary-collection">
          <collection part="primary-collection"/>
        </do>

        <do with="&new_for_current_user">
          <section class="create-new" if="&!linkable?(:new) && can_create?">
            <h2>Add <A-or-An word="&primary_collection_name.to_s.singularize.titleize"/></h2>
            <form update="primary-collection, primary-collection-count" message="Adding #{primary_collection_name.to_s.singularize.titleize}..." reset-form>
              <field-list skip="#{@this.class.reverse_reflection(@this.send(primary_collection_name).proxy_reflection.name).name}"
                          skip-associations="has_many" param="primary-collection-field-list"/>
              <submit label="Create #{primary_collection_name.to_s.singularize.titleize}"/>
            </form>
          </section>
        </do>
        <nav class="new-link"><a action="new" if="&linkable?(:new) && can_create?"/></nav>
      </section>

    </content-body:>
    <aside: param>
      <section class="preview-collections">
        <with-fields fields="&secondary_collection_names">
          <section class="#{this_field.dasherize} collection">
            <h2><this-field.titleize/></h2>
            <collection with="&this.limit(6)"/>
            <a class="more">More... (<count/>)</a>
          </section>
        </with-fields>
      </section>
    </aside:>
  </page>
</def>


<def tag="edit-page">
  <page merge>    
    <body: class="edit-page #{this.class.name.underscore}" param/>
    <content-header: param>
      <heading><if test="&this.respond_to? :name"><name/></if><else><type-name/></else></heading>
      <delete-button in-place="&false" label="Remove This #{this.class.name}" param/>
    </content-header>

    <content-body: param>
      <error-messages param/>
      <form param>
        <field-list skip-associations="has_many" param/>
        <div class="actions" param="actions">
          <submit label="Save Changes" param/><do param="back-link"> or <a>Cancel</a></do>
        </div>
      </form>
          
    </content-body>
  </page>
</def>


<def tag="new-in-collection-page">
  <set association-name="&@association.proxy_reflection.name.to_s.singularize.titleize"/>
  <page title="New #{type_name}" merge>
    <body: class="new-in-collection-page #{type_name(:with => @owner)} #{type_name}" param/>
    <content-header: param>
      <heading param>New <association-name/></heading>
      <sub-heading param>For: <a with="&@owner" /></sub-heading>
    </content-header>

    <content-body: param>
      <error-messages/>

      <form param>
        <field-list skip="#{@owner.class.reverse_reflection(@association.proxy_reflection.name).name}"
                    skip-associations="has_many" param/>
        <div class="actions" param="actions">
          <submit label="Create #{association_name}" param/><do param="back-link"> or <a with="&@owner">Cancel</a></do>
        </div>
      </form>
    </content-body>
  </page>
</def>


<def tag="show-collection-page">
  <% title = "#{@reflection.name.to_s.titleize} for #{name(:with => @owner)}" %>
  <page title="&title" merge>
    <body: class="show-collection-page #{type_name(:with => @owner)} #{type_name(:pluralize => true)}"
          param/>
    <content-header: param>
      <nav>Back to <a with="&@owner"/></nav>
      <heading><%= title %></heading>
      <sub-heading><count with="&@pages.item_count" label="&@reflection.klass.name.titleize"/></sub-heading>
    </content-header>

    <content-body: param>
      <nav param="top-pagination-nav"><page-nav/></nav>

      <card repeat/>
      
      <nav param="bottom-pagination-nav"><page-nav param/></nav>
      
      <nav if="&Hobo.simple_has_many_association?(@association)" param="new-link">
        <a to="&@association" action="new"/>
      </nav>
    </content-body>
  </page>
</def>


<def tag="signup-page">
  <page layout="simple" title="Sign up to #{app_name}" merge>
    <body: class="signup-page" param/>

    <live-search: replace/>
    <nav: replace/>
    
    <content-header: param>
      <heading param>Sign Up</heading>
    </content-header>
    
    <content-body: param>
      <error-messages/>
      <form action="&request.request_uri" param>
        <field-list fields="login, password, password_confirmation" param>
          <login-label:><%= model.login_attribute.to_s.titleize %></login-label>
          <password-confirmation-label:>Confirm Password</password-confirmation-label>
        </field-list>

        <div class="actions" param="actions">
          <submit label='Sign Up'/>
        </div>
      </form>
    </content-body>

  </page>
</def>


<def tag="login-page" attrs="remember-me">
  <page layout="simple" title="Log in to #{app_name}" merge>
   
    <body: class="login-page" param/>
 
    <live-search: replace/>
    <nav: replace/>
    
    <content-header: param>
      <heading param>Log In</heading>
    </content-header>

    <content-body: param>
      <form action="&request.request_uri" class="login" param>
        <labelled-item-list param>
          <labelled-item>
            <item-label param="login-label"><%= model.login_attribute.to_s.titleize %></item-label>
            <item-value><input type="text" name="login" id="login" class="string" param="login-input" /></item-value>
          </labelled-item>

          <labelled-item>
            <item-label param="password-label">Password</item-label>
            <item-value><input type="password" name="password" id="password" class="string" param="password-input"/></item-value>
          </labelled-item>

          <labelled-item if="&remember_me">
            <item-label class="field-label" param="remember-me-label">Remember me:</item-label>
            <item-value><input type="checkbox" name="remember_me" id="remember-me" param="remember-me-input"/></item-value>
          </labelled-item>
        </labelled-item-list>
        <set user="&Hobo::UserController.user_models.first"/>
        <div class="actions" param="actions">
          <submit label='Log in' param/><if test="&signup_url(user)" class='nav-item'> or <a href="&signup_url(user)">Sign up</a></if>
        </div>
      </form>
    </content-body>
  </page>
</def>


<def tag="account-disabled-page">

  <page layout="simple" title="#{app_name} - account not available" merge>
       
    <body: class="account-disabled-page" param/>

    <content-header: param><heading param>Account is not available</heading></content>

    <content-body: param>
      <p>Your account is not available at this time.</p>
    </content-body>
  </page>

</def>
 


<def tag="permission-denied-page">
  <page merge>
    <content-header: param>
      <heading param>That operation is not allowed</heading>
    </content-header>
  </page>
</def>

<def tag="not-found-page">
  <page merge>
    <content-header: param>
      <heading param>The page you were looking for could not be found</heading>
    </content-header>
  </page>
</def>

<def tag="doctype" attrs="version"><%=
  case version.upcase
    when "HTML 4.01 STRICT"
      '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" ' + 
        '"http://www.w3.org/TR/html4/strict.dtd">'
    when "HTML 4.01 TRANSITIONAL"
      '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" ' + 
        '"http://www.w3.org/TR/html4/loose.dtd">'
    when "XHTML 1.0 STRICT"
      '!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" ' + 
        '"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">'
    when "XHTML 1.0 TRANSITIONAL"
      '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ' + 
        '"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">'
    when "XHTML 1.1"
      '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" ' + 
        '"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">'
  end
%></def>

<def tag="stylesheet" attrs="name, media">
  <repeat with="&comma_split(name)">
    <link href="#{base_url}/stylesheets/#{this}.css" media="#{ media || 'all' }"
          rel="stylesheet" type="text/css" />
  </repeat>
</def>

<def tag="javascript" attrs="name">
  <if test="&name.is_a?(Symbol)">
    <%= javascript_include_tag name %>
  </if>
  <else>
    <repeat with="&comma_split(name)">
      <%= javascript_include_tag this %>
    </repeat>
  </else>
</def>

<def tag="flash-message" attrs="type">
  <% type = type ? type.to_sym : :notice %>
  <div class="flash #{type}" if="&flash[type]" merge-attrs><%= flash[type] %></div>
</def>

<def tag="ajax-progress">
  <div id="ajax-progress">
    <div>
      <span id="ajax-progress-text"></span>
    </div>
  </div>
</def>


<def tag="app-name"><%= @hobo_app_name ||= File.basename(Dir.chdir(RAILS_ROOT) { Dir.getwd }).strip.titleize %></def>

<def tag="default-page-title"><%= t = this.to_s; ; "#{t.blank? ? '' : t + ' - '}#{app_name}" %></def>

